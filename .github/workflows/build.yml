name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  pull_request:

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        name:
          - linux-arm
          - linux-arm64
          - linux-x64
          - android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Disk Cleanup
        run: ./disk_cleanup.sh
      - name: Build
        run: make -C docker ${{ matrix.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-${{ matrix.name }}.tar.xz
          path: package/libwebrtc-${{ matrix.name }}.tar.xz

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        name:
          - macos-arm64
          - macos-x64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make -C build USE_CCACHE=0 ${{ matrix.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-${{ matrix.name }}.tar.xz
          path: package/libwebrtc-${{ matrix.name }}.tar.xz

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Disk Cleanup
        run: .\disk_cleanup.bat
      - name: Build
        run: .\build.windows.bat
      - name: Upload artifact x64
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-win-x64.7z
          path: package/libwebrtc-win-x64.7z
      - name: Upload artifact x86
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-win-x86.7z
          path: package/libwebrtc-win-x86.7z

  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make -C build USE_CCACHE=0 ios
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libwebrtc-ios.zip
          path: package/libwebrtc-ios.zip

  release:
    strategy:
      fail-fast: false
      matrix:
        name:
          - linux-arm
          - linux-arm64
          - linux-x64
          - macos-arm64
          - macos-x64
          - android
          - ios
          - win-x64
          - win-x86
        include:
          - name: linux-arm
            ext: tar.xz
            filename: libwebrtc-linux-arm.tar.xz
            type: application/x-xz
          - name: linux-arm64
            ext: tar.xz
            filename: libwebrtc-linux-arm64.tar.xz
            type: application/x-xz
          - name: linux-x64
            ext: tar.xz
            filename: libwebrtc-linux-x64.tar.xz
            type: application/x-xz
          - name: macos-arm64
            ext: tar.xz
            filename: libwebrtc-macos-arm64.tar.xz
            type: application/x-xz
          - name: macos-x64
            ext: tar.xz
            filename: libwebrtc-macos-x64.tar.xz
            type: application/x-xz
          - name: android
            ext: tar.xz
            filename: libwebrtc-android.tar.xz
            type: application/x-xz
          - name: ios
            ext: zip
            filename: WebRTC.framework.zip
            type: application/zip
          - name: win-x64
            ext: 7z
            filename: libwebrtc-win-x64.7z
            type: application/x-7z-compressed
          - name: win-x86
            ext: 7z
            filename: libwebrtc-win-x86.7z
            type: application/x-7z-compressed
    name: Release ${{ matrix.name }}
    if: contains(github.ref, 'tags/')
    needs:
     - build-linux
     - build-macos
     - build-windows
     - build-ios
    runs-on: ubuntu-latest
    steps:
      - name: Download ${{ matrix.name }}
        uses: actions/download-artifact@v2
        with:
          name: libwebrtc-${{ matrix.name }}.${{ matrix.ext }}
      - name: Rename file
        run: |
          mv libwebrtc-${{ matrix.name }}.${{ matrix.ext }} ${{ matrix.filename }}.tmp
          mv ${{ matrix.filename }}.tmp ${{ matrix.filename }}
      - name: Upload ${{ matrix.name }} Release asset
        uses: ncipollo/release-action@v1
        with:
          name: Release m${{ github.ref }}
          allowUpdates: true
          draft: true
          prerelease: false
          artifacts: ${{ matrix.filename }}
          token: ${{ secrets.PERSONAL_TOKEN }}
